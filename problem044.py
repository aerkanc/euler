__author__ = 'Ahmet Erkan ÇELİK'

from datetime import datetime
import math

# Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
#
# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
#
# It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
#
# Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

startTime = datetime.now()
result = 0

pentagonal_numbers = []


def generate_pentagonal_numbers():
    i = 1
    while True:
        yield (i * (3 * i - 1)) / 2
        i += 1


for pn in generate_pentagonal_numbers():
    pentagonal_numbers.append(pn)
    if len(pentagonal_numbers) > 1:
        for i in range(0, len(pentagonal_numbers)):
            for j in range(i+1,len(pentagonal_numbers)-1):
                sum = pentagonal_numbers[i] + pentagonal_numbers[j]
                if sum == pn:
                    diff = abs(pentagonal_numbers[i] - pentagonal_numbers[j])
                    if diff in pentagonal_numbers:
                        result = diff
                        print("Result is: %s" % (result))
                        print(datetime.now() - startTime)
                        exit()
# Result is: 5482660.0
# 0:04:55.383557
